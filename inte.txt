===> Awaiting all services ready
gateway service is up and running at http://localhost:9500
===> Launch docker container running python integration script
------------------------------------------------------------------------------------------
=> Peuplement de la base de données

Ajout de 4 modules pour un quota de provisions max à 10:
  - Inventaire de 32 provisions
  - Modules isolés : 1 (514) 
  - Modules en mauvaise situation : 2
  - Besoins de 8 provisions

POST http://localhost:4303/module
{"id_module":512,"lifeStatus":false,"supplies":10,"isolated":false,"_id":"6338ac53144d809967045636"}
{"id_module":513,"lifeStatus":true,"supplies":7,"isolated":false,"_id":"6338ac53144d809967045639"}
{"id_module":514,"lifeStatus":false,"supplies":9,"isolated":true,"_id":"6338ac53144d80996704563c"}
{"id_module":515,"lifeStatus":true,"supplies":6,"isolated":false,"_id":"6338ac53144d80996704563f"}

--------------------------------- Start Integration Tests --------------------------------

---------------------- Scenario 1 ----------------------

=> Récupérer l'état individuel des modules via Life Support Service
   En tant que Deke, je veux controler l'état des conditions de vie de chaque module
   On s'attend à recevoir les 4 modules dont 2 avec le champ lifeStatus à false
GET http://localhost:4304/supervision/
Response : 
[{"id_module":512,"lifeStatus":false},{"id_module":513,"lifeStatus":true},{"id_module":514,"lifeStatus":false},{"id_module":515,"lifeStatus":true}]

=> Récupérer l'état général des modules via Life Support Service
   En tant que Deke, je veux savoir si tous les modules sont dans un bon état rapidement
   On s'attend à recevoir false car 2 des 4 modules n'ont pas des conditions de vie acceptables
GET http://localhost:4304/supervision/global
Response : 
false

---------------------- Scenario 2 ----------------------

=> Récupérer la liste des besoins des modules via Needs Control Service
   En tant que Buzz, je veux récupérer tous les besoins des modules
   On s'attend à recevoir un objet avec le champ quantity à 8 car il manque respectivement 0, 3, 1 et 4 provisions à chaque module pour atteindre le stock maximal
GET http://localhost:4302/needs-control-supervision/moduleNeeds
Response : 
{"quantity":8}

=> Envoyer une commande à la terre via needs control service
   En tant que Buzz, je veux envoyer 2 commandes au Resupply Service, une de 13 objets et une autre de 26
POST http://localhost:4302/needs-control-supervision/sendOrder
Body :
{'quantity': 13}
Response : 
Commande passée

POST http://localhost:4302/needs-control-supervision/sendOrder
Body :
{'quantity': 26}
Response : 
Commande passée

---------------------- Scenario 3 ----------------------

=> Récupération des commandes de la base lunaire via Resupply Service
   En tant que Dorothy, je veux voir toutes les commandes passées
   On s'attend à voir les deux commandes de 13 et 26 provisions passées par Buzz précédemment. Elles seront toutes les deux en En cours de traitement 
GET http://localhost:4301/resupply-supervision/supplyOrders
Response : 
[{"_id":"6338ac53e08937fd598bc5c1","quantity":13,"status":"En cours de traitement"},{"_id":"6338ac53e08937fd598bc5c3","quantity":26,"status":"En cours de traitement"}]

=> Récupération des missions de ravitaillement via Resupply Service
   En tant que Dorothy, je veux controler les missions de ravitaillement
   On s'attend n'avoir aucune mission de ravitaillement car aucune mission n'a été lancée et aucune commande n'a été validée
GET http://localhost:4301/resupply-supervision/rocketStatus
Response : 
[]

=> Validation d'une commande via Resupply Service
   En tant que Dorothy, je veux valider une commande passée par la base lunaire
   On valide la première commande de Buzz, celle avec 13 provisions demandées et on s'attend à récupérer un Commande validée
PUT http://localhost:4301/resupply-supervision/:idCommande/validate
Response : 
Commande validée

=> Récupération de la commande via Resupply Service
   En tant que Dorothy, je veux m'assurer que la commande a été bien été validée
   Cette fois, on s'attend toujours à récupérer les deux commandes de Buzz mais la première sera passée en Validé
GET http://localhost:4301/resupply-supervision/supplyOrders
Response : 
[{"_id":"6338ac53e08937fd598bc5c1","quantity":13,"status":"Validé"},{"_id":"6338ac53e08937fd598bc5c3","quantity":26,"status":"En cours de traitement"}]

=> Récupération des missions de ravitaillement via Resupply Service
   En tant que Dorothy, je veux controler les missions de ravitaillement
   On s'attend cette fois à retrouver une seule mission de ravitaillement qui contient la commande de 13 provisions. Cette commande sera En cours de traitement
GET http://localhost:4301/resupply-supervision/rocketStatus
Response : 
[{"_id":"6338ac53e08937fd598bc5ca","orders":[{"quantity":13,"status":"Validé","_id":"6338ac53e08937fd598bc5c1"}],"state":"En cours de traitement"}]

=> Envoi d'une mission de ravitaillement via Resupply Service
   En tant que Dorothy, je veux envoyer une mission de ravitaillement vers la base lunaire
   On envoie la mission de ravitaillement précédente et on s'attend à voir son statut passer en En cours d'acheminement
PUT http://localhost:4301/resupply-supervision/:missionId/send
Response : 
{"_id":"6338ac53e08937fd598bc5ca","orders":[{"quantity":13,"status":"Validé","_id":"6338ac53e08937fd598bc5c1"}],"resupply_status":"En cours d'acheminement"}

=> Récupération des missions de ravitaillement via Resupply Service
   En tant que Dorothy, je veux controler les missions de ravitaillement
   On s'attend à récupérer une seule mission de ravitaillement avec son statut En cours d'acheminement
GET http://localhost:4301/resupply-supervision/rocketStatus
Response : 
[{"_id":"6338ac53e08937fd598bc5ca","orders":[{"quantity":13,"status":"Validé","_id":"6338ac53e08937fd598bc5c1"}],"state":"En cours d'acheminement"}]

---------------------- Scenario 4 ----------------------

=> Isolement d'un module lunaire via Life Support Service
   En tant que Deke, je veux isoler un module à distance. Par exemple le 512
PUT http://localhost:4304/supervision/:idModule/isolate
Response : 
Module isolé

=> Récupération des données d'un module lunaire via Life Support Service
   On veut s'assurer que le module 512 a bien été isolé
   On s'attend à ce que le champ isolated du module 512 soit à true 
GET http://localhost:4303/module
Response : 
[{"id_module":512,"lifeStatus":false,"supplies":10,"isolated":true},{"id_module":513,"lifeStatus":true,"supplies":7,"isolated":false},{"id_module":514,"lifeStatus":false,"supplies":9,"isolated":true},{"id_module":515,"lifeStatus":true,"supplies":6,"isolated":false}]

---------------------- Scenario 5 ----------------------

=> Récupération de l'inventaire de la base lunaire via Module Life Service
   En tant que Jim, je veux contrôler l'inventaire de la base lunaire
   On s'attend à récupérer un objet avec le champ quantity à 32 car les modules possèdent respectivement 10, 7, 9 et 6 provisions
GET http://localhost:4303/inventory
Response : 
{"quantity":32}

---------------------------------- End Integration Tests ---------------------------------
